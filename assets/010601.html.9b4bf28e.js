import{_ as n,o as s,c as a,a as t}from"./app.3cf3e975.js";const p={},o=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5C0F\u56FE\u6807html</span>
<span class="token operator">&lt;</span>div
  ref<span class="token operator">=</span><span class="token string">&quot;tsetMyDiv&quot;</span>
  <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;ys-float-btn&quot;</span>
  <span class="token operator">:</span>style<span class="token operator">=</span><span class="token string">&quot;{ width: itemWidth + &#39;px&#39;, height: itemHeight + &#39;px&#39;, left: left + &#39;px&#39;, top: top + &#39;px&#39; }&quot;</span>
  @click<span class="token operator">=</span><span class="token string">&quot;remarkShowBtn&quot;</span>
  @touchstart<span class="token operator">=</span><span class="token string">&quot;dragStart&quot;</span>
  @touchend<span class="token operator">=</span><span class="token string">&quot;dragEnd&quot;</span>
  @touchmove<span class="token operator">=</span>&quot;
    <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">dragProgress</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  &quot;
<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>a<span class="token operator">-</span>button type<span class="token operator">=</span><span class="token string">&quot;primary&quot;</span> shape<span class="token operator">=</span><span class="token string">&quot;circle&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>SvgIcon name<span class="token operator">=</span><span class="token string">&quot;discuss-white&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">-</span>button<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>


<span class="token comment">// js</span>
<span class="token keyword">const</span> clientWidth <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> clientHeight <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> left <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> top <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> gapWidth <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> itemWidth <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u56FE\u6807\u7684\u5BBD\u5EA6</span>
<span class="token keyword">const</span> itemHeight <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u56FE\u6807\u7684\u9AD8\u5EA6</span>
<span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  clientWidth<span class="token punctuation">.</span>value <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>
  clientHeight<span class="token punctuation">.</span>value <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>
  left<span class="token punctuation">.</span>value <span class="token operator">=</span> clientWidth<span class="token punctuation">.</span>value <span class="token operator">-</span> itemWidth<span class="token punctuation">.</span>value <span class="token operator">-</span> gapWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  top<span class="token punctuation">.</span>value <span class="token operator">=</span> clientHeight<span class="token punctuation">.</span>value <span class="token operator">*</span> <span class="token number">0.8</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> tsetMyDiv <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">dragStart</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  tsetMyDiv<span class="token punctuation">.</span>value<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">dragEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  tsetMyDiv<span class="token punctuation">.</span>value<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">&#39;all 0.3s&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>left<span class="token punctuation">.</span>value <span class="token operator">&gt;</span> clientWidth<span class="token punctuation">.</span>value <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    left<span class="token punctuation">.</span>value <span class="token operator">=</span> clientWidth<span class="token punctuation">.</span>value <span class="token operator">-</span> itemWidth<span class="token punctuation">.</span>value <span class="token operator">-</span> gapWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    left<span class="token punctuation">.</span>value <span class="token operator">=</span> gapWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>top<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> <span class="token number">54</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    top<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">54</span> <span class="token operator">+</span> gapWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>top<span class="token punctuation">.</span>value <span class="token operator">&gt;</span> clientHeight<span class="token punctuation">.</span>value <span class="token operator">-</span> <span class="token number">36</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    top<span class="token punctuation">.</span>value <span class="token operator">=</span> clientHeight<span class="token punctuation">.</span>value <span class="token operator">-</span> <span class="token number">36</span> <span class="token operator">-</span> gapWidth<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">dragProgress</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">event</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>targetTouches<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> touch <span class="token operator">=</span> event<span class="token punctuation">.</span>targetTouches<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    left<span class="token punctuation">.</span>value <span class="token operator">=</span> touch<span class="token punctuation">.</span>clientX <span class="token operator">-</span> itemWidth<span class="token punctuation">.</span>value <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
    top<span class="token punctuation">.</span>value <span class="token operator">=</span> touch<span class="token punctuation">.</span>clientY <span class="token operator">-</span> itemHeight<span class="token punctuation">.</span>value <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),e=[o];function c(l,u){return s(),a("div",null,e)}var r=n(p,[["render",c],["__file","010601.html.vue"]]);export{r as default};
